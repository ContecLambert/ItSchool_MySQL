SELECT 'WELCOME TO ORACLE' "적용전", INITCAP('WELCOME TO ORACLE') "INITCAP적용후" FROM DUAL;
SELECT SUBSTR ('Welcome to Oracle', 4, 3) FROM DUAL;
SELECT ENAME, 19||SUBSTR(HIREDATE, 1, 2)년도, SUBSTR(HIREDATE, 4, 2)달 FROM EMP;
SELECT LPAD('ORACLE', 20, '#') FROM DUAL;
SELECT RPAD('ORACLE', 20, '#') FROM DUAL;
SELECT LTRIM('          ORACLE') FROM DUAL;
SELECT RTRIM('ORACLE           ') FROM DUAL;
SELECT SYSDATE FROM DUAL;
SELECT SYSDATE-1 어제, SYSDATE 오늘, SYSDATE+1 내일 FROM DUAL;
SELECT ENAME, SYSDATE, HIREDATE, MONTHS_BETWEEN(SYSDATE, HIREDATE) 근무개월수 FROM EMP;
SELECT SYSDATE, NEXT_DAY(SYSDATE, '수요일') FROM DUAL;
SELECT SYSDATE, NEXT_DAY(SYSDATE, 6) FROM DUAL;
SELECT LAST_DAY(sysdate) FROM dual;
SELECT TO_CHAR(123456, '000000000'), TO_CHAR(123456, '999,999,999') FROM DUAL;
SELECT ENAME, SAL, COMM, JOB FROM EMP ORDER BY JOB;
SELECT ENAME, SAL, COMM, SAL*12+COMM, NVL(COMM, 0), SAL*12+NVL(COMM, 0) FROM EMP ORDER BY JOB;
SELECT ENAME, DEPTNO, DECODE(DEPTNO, 10, 'ACCOUNTING', 20, 'RESEARCH', 30, 'SALES', 40, 'OPERATIONS') AS DNAME FROM EMP;
sELECT DEPTNO, SAL, ROUND(SAL, -3) FROM EMP;
SELECT SUM(SAL) FROM EMP;
SELECT MAX(SAL), MIN(SAL) FROM EMP;
SELECT ENAME, MAX(SAL) FROM EMP;
SELECT COUNT(COMM) FROM EMP;
 SELECT COUNT(DISTINCT JOB) 업무수 FROM EMP;
 SELECT JOB FROM EMP ORDER BY JOB;
 select ename from emp where job=PRESIDENT;
 SELECT DEPTNO, JOB, COUNT(*), SUM(SAL) FROM EMP GROUP BY ROLLUP(DEPTNO, JOB);
 SELECT DEPTNO, JOB, COUNT(*), SUM(SAL) FROM EMP GROUP BY CUBE(DEPTNO, JOB);
 SELECT LEVEL, LPAD(ENAME, LEVEL＊4, '*') AS ENAME1, SUBSTR(SYS_CONNECT_BY_PATH(ENAME,'-'), 2) ENAME2, MGR FROM EMP START WITH MGR IS NULL CONNECT BY PRIOR EMPNO = MGR;
  COL ENAME1 FOR A20;
 COL ENAME2 FOR A20;
 SELECT LEVEL, LPAD(ENAME, LEVEL＊4, '*') AS ENAME1, SUBSTR(SYS_CONNECT_BY_PATH(ENAME,'-'), 2) ENAME2, MGR FROM EMP START WITH MGR IS NULL CONNECT BY PRIOR EMPNO = MGR;
 
 SELECT LEVEL, SUM(SAL) TOTAL, COUNT(EMPNO) CNT 
 FROM EMP START WITH MGR IS NULL 
 CONNECT BY PRIOR EMPNO = MGR 
 GROUP BY LEVEL ORDER BY LEVEL;
 
 SELECT DEPTNO, LISTAGG(ENAME, '**') 
 WITHIN GROUP (ORDER BY HIREDATE) "LISTAGG" 
 FROM EMP GROUP BY DEPTNO;
 
 SELECT DEPTNO, 
 COUNT(DECODE(JOB, 'CLERK', 0)) "CLERK", 
 COUNT(DECODE(JOB, 'MANAGER', 0)) "MANAGER", 
 COUNT(DECODE(JOB, 'PRESIDENT', 0)) "PRESIDENT", 
 COUNT(DECODE(JOB, 'ANALYST', 0)) "ANALYST", 
 COUNT(DECODE(JOB, 'SALESMAN', 0)) "SALESMAN" 
 FROM EMP GROUP BY DEPTNO ORDER BY DEPTNO;
 
 SELECT * FROM (SELECT DEPTNO, JOB, EMPNO, SAL FROM EMP) 
 PIVOT (COUNT(EMPNO) AS CNT, SUM(NVL(SAL, 0)) 
 AS SAL FOR JOB IN ( 'CLERK' AS "C", 'MANAGER' AS "M", 'PRESIDENT' AS "P", 'ANALYST' AS "A", 'SALESMAN' AS "S") ) 
 ORDER BY DEPTNO;

SELECT * FROM EMP, DEPT 
WHERE EMP.DEPTNO = DEPT.DEPTNO;

SELECT ENAME, DNAME FROM EMP, DEPT 
WHERE EMP.DEPTNO = DEPT.DEPTNO;

 SELECT ENAME, DNAME FROM EMP, DEPT 
 WHERE EMP.DEPTNO = DEPT.DEPTNO AND ENAME = 'SCOTT';
 
 SELECT ENAME, DNAME, DEPTNO FROM EMP, DEPT 
 WHERE EMP.DEPTNO = DEPT.DEPTNO AND ENAME = 'SCOTT';
 
 SELECT EMP.ENAME, DEPT.DNAME, DEPT.DEPTNO FROM EMP, DEPT 
 WHERE EMP.DEPTNO = DEPT.DEPTNO AND ENAME = 'SCOTT';
 
 SELECT ENAME, SAL, GRADE FROM EMP, SALGRADE 
 WHERE SAL BETWEEN LOSAL AND HISAL;
 
 SELECT E.ENAME, D.DNAME, S.GRADE 
 FROM EMP E, DEPT D, SALGRADE S 
 WHERE E.DEPTNO = D.DEPTNO AND E.SAL 
 BETWEEN S.LOSAL AND S.HISAL;
 
 SELECT EMPLOYEE.ENAME||'의 매니저는 '|| MANAGER.ENAME||'입니다.' 
 FROM EMP EMPLOYEE, EMP MANAGER 
 WHERE EMPLOYEE.MGR = MANAGER.EMPNO;
 
 SELECT EMPLOYEE.ENAME||'의 매니저는 '|| MANAGER.ENAME||'입니다.' 
 FROM EMP EMPLOYEE, EMP MANAGER 
 WHERE EMPLOYEE.MGR = MANAGER.EMPNO(+);
 
 SELECT E.ENAME, E.DEPTNO, D.DEPTNO, D.DNAME 
 FROM EMP E, DEPT D 
 WHERE E.DEPTNO(+) = D.DEPTNO;
 
 
 SELECT DNAME FROM DEPT 
 WHERE DEPTNO = (SELECT DEPTNO FROM EMP WHERE ENAME = 'SCOTT');
 
 SELECT ENAME, SAL FROM EMP 
 WHERE SAL > (SELECT AVG(SAL) FROM EMP);
 
 --문제6) EMP테이블을 이용하여 COMM 컬럼(commission)값의 평균을 구하는 쿼리문을 작성하시오.( NULL 값을 대체하는 함수 NVL함수를 사용하시오.)
 --   * 함수 NVL(A, B) => A값이 NULL 값인 경우 B값으로 대체한다.
 SELECT avg(nvl(COMM,0)) FROM emp;
 
-- 문제7) 입사일 기준으로 가장 오래 근무한 사원이름, 근무일수를 출력하시오. 
-- (EMP테이블에 있는 hiredate(입사일) 컬럼)
select ename 가장_오래_근무한_사원, trunc(sysdate-hiredate) 근무일수 from emp where hiredate = (select min(hiredate) from emp);
-- 문제8) EMP 테이블에서 sal 컬럼의 최대값을 찾아 empid와 fname를 검색하라. 
-- 단, Sub Qurery문을 사용한다.
select empno, ename from emp 
where sal = (select max(sal) from emp);

SELECT ENAME, SAL, DEPTNO FROM EMP 
WHERE DEPTNO = (SELECT DISTINCT DEPTNO FROM EMP WHERE SAL >= 3000);

SELECT ENAME, SAL, DEPTNO FROM EMP 
WHERE DEPTNO IN (SELECT DISTINCT DEPTNO FROM EMP WHERE SAL >= 3000);

SELECT ENAME, SAL FROM EMP 
WHERE SAL > ANY (SELECT SAL FROM EMP WHERE DEPTNO = 30);

SELECT ENAME, SAL, deptno FROM EMP 
WHERE SAL> ALL (SELECT SAL FROM EMP WHERE DEPTNO = 30);

SELECT ENAME, DEPTNO, SAL FROM EMP E
WHERE EXISTS 
(SELECT 1 FROM DEPT D WHERE D.DEPTNO IN (10, 20) AND E.DEPTNO = D.DEPTNO);

SELECT ENAME, DEPTNO, SAL 
FROM EMP E WHERE NOT EXISTS 
(SELECT 1 FROM DEPT D WHERE D.DEPTNO = 40 AND E.DEPTNO = D.DEPTNO);

CREATE TABLE DEPT_COPY AS SELECT * FROM DEPT;

select * from dept_copy;

CREATE TABLE EMP_COPY AS SELECT * FROM EMP;

select * from emp_copy;

SELECT EMPNO, ENAME, DEPTNO FROM EMP_COPY WHERE DEPTNO=30;

CREATE VIEW EMP_VIEW30 
AS SELECT EMPNO, ENAME, DEPTNO 
FROM EMP_COPY WHERE DEPTNO=30;

CREATE OR REPLACE VIEW VIEW_CHK30 AS
SELECT EMPNO, ENAME, SAL, COMM, DEPTNO FROM EMP_COPY
WHERE DEPTNO=30 WITH CHECK OPTION;

SELECT * FROM VIEW_CHK30;

SELECT ROWNUM, EMPNO, ENAME, HIREDATE FROM EMP;

SELECT ROWNUM, EMPNO, ENAME, HIREDATE 
FROM EMP 
ORDER BY HIREDATE;

CREATE OR REPLACE VIEW VIEW_HIRE 
AS 
SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE;


select count(*) from emp08;




